CREATE OR REPLACE FORCE VIEW "TEST_VSTSRedgate".vewreportfuture (companycode,companyname,dealnumber,dealref,buysellcode,buysell,hedgecode,hedgetrade,bankcode,bankname,dealdate,dealamount,currencycode,othercode,currency,transcode,trans,exrate,maturity,cfut_complete_date,completedate,canceldate,cancelamount,cancelrate,pandlfcy,status,dealtype,userid,initcode,asondate,balancefcy,balanceinr,m2mrate,washrate,mtmpandl,mtmpandlinr,cobrate,usdequalrate,balanceequalusd,spot,"FORWARD",margin,recordstatus,exchangetrade,loction,bankref,cspotrate,cforwardrate,cmarginrate,camount,processcomplete,dealconfirmdate,dealconfirmtime,dealdealerremarks,dealboremarks,deal_ourdealername,deal_theirdealername,deal_dealenteredby,cancelconfirmtime,cancelconfirmdate,cancelboremarks,canceldealerremarks,cancelourdealername,canceltheirdealername,cancelenteredby,cashflowdate) AS
SELECT COMPANYCODE,
    COMPANYNAME,
    DEALNUMBER,
    DEALREF,
    BUYSELLCODE,
    BUYSELL,
    HEDGECODE,
    HEDGETRADE,
    BANKCODE,
    BANKNAME,
    DEALDATE,
    DEALAMOUNT,
    CURRENCYCODE,
    OTHERCODE,
    CURRENCY,
    TRANSCODE,
    TRANS,
    EXRATE,
    MATURITY,
    CFUT_COMPLETE_DATE,
    COMPLETEDATE,
    CANCELDATE,
    CANCELAMOUNT,
    CANCELRATE,
    PANDLFCY,
    STATUS,
    DEALTYPE,
    USERID,
    INITCODE,
    ASONDATE,
    BALANCEFCY,
    BALANCEINR,
    M2MRATE,
    WASHRATE,
    case when BUYSELLCODE = 25300001 then 
    Pkgforexprocess.fncgetprofitloss( BALANCEFCY,(M2MRATE - Margin), Exrate,BUYSELLCODE )
    else Pkgforexprocess.fncgetprofitloss( BALANCEFCY,(M2MRATE + Margin), Exrate,BUYSELLCODE ) end AS MTMPANDL,
    case when BUYSELLCODE = 25300001 then 
    Pkgforexprocess.fncgetprofitloss(BALANCEFCY,(M2MRATE - Margin), Exrate,Buysellcode )* Washrate 
    else Pkgforexprocess.fncgetprofitloss(BALANCEFCY,(M2MRATE + Margin), Exrate,Buysellcode )* Washrate 
    end as Mtmpandlinr,
    Cobrate,
    USDEqualRate,
    BALANCEFCY*USDEqualRate BalanceEqualUSD,
    Spot,
    Forward,
    Margin,
    RecordStatus,
    ExchangeTrade,
    Loction,
    BankRef,
    CSpotRate,
    CForwardRate,
    CMarginRate,
    CAmount,
    ProcessComplete,
    DEALCONFIRMDATE,
    DEALCONFIRMTIME,
    DEALDEALERREMARKS,
    DEALBOREMARKS,
    DEAL_OURDEALERNAME,
    DEAL_THEIRDEALERNAME,
    DEAL_DEALENTEREDBY,
    CANCELCONFIRMTIME,
    CANCELCONFIRMDATE,
    CANCELBOREMARKS,
    CANCELDEALERREMARKS,
    CANCELOURDEALERNAME,
    CANCELTHEIRDEALERNAME,
    CancelEnteredBy,
    CASHFLOWDATE
  FROM
    (SELECT cfut_company_code CompanyCode,
      a.pick_short_description CompanyName,
      cfut_deal_number DealNumber,
      cfut_dealer_remark dealref,
      cfut_buy_sell BuySellCode,
      DECODE(cfut_buy_sell, 25300001,'Buy', 'Sell') BuySell,
      cfut_hedge_trade HedgeCode,
      pkgReturnCursor.fncGetDescription(cfut_hedge_trade,2) HedgeTrade,
      --        decode(cfut_hedge_trade, 26000001, 'Hedge', 'Trade') HedgeTrade,
      cfut_counter_party BankCode,
      b.pick_short_description BankName,
      cfut_execute_date DealDate,
      cfut_base_amount DealAmount,
      cfut_base_currency CurrencyCode,
      cfut_other_currency OtherCode,
      c.pick_short_description
      || '/'
      || d.pick_short_description Currency,
      cfut_backup_deal TransCode,
      e.pick_short_description Trans,
      Cfut_Exchange_Rate Exrate,
      Cfut_Maturity_Date Maturity,
      Cfut_Complete_Date,
      Cfut_Complete_Date Completedate,
      -- decode(Sign(fncAsonDate() - cfut_complete_date), 1, cfut_complete_date, NULL) CompleteDate,
      cfrv_execute_date CancelDate,
      cfrv_reverse_lot * 1000 CancelAmount,
      cfrv_lot_price CancelRate,
      cfrv_profit_loss PandLFcy,
      cfut_process_complete Status,
      32200002 DealType,
      cfut_user_id UserID,
      cfut_init_code InitCode,
      fncAsonDate() AsonDate,
      pkgForexProcess.fncGetOutStanding(cfut_deal_number, 1, 14, 1, fncAsonDate())*1000 BalanceFcy,
      Pkgforexprocess.Fncgetoutstanding(Cfut_Deal_Number, 1, 14, 2, Fncasondate())*1000 Balanceinr,
      pkgforexprocess.fncFutureMTMRate(CFUT_MATURITY_DATE,CFUT_EXCHANGE_CODE,CFUT_BASE_CURRENCY, Cfut_Other_Currency,Fncasondate()) M2mrate,
      DECODE(Cfut_Other_Currency, 30400003,1, Pkgforexprocess.Fncfuturemtmrate(Cfut_Maturity_Date,Cfut_Exchange_Code,Cfut_Base_Currency, CFUT_OTHER_CURRENCY,fncAsonDate())) WashRate,
      pkgforexprocess.fncFutureDealRate(CFUT_DEAL_NUMBER,fncAsonDate() ) COBRate,
      DECODE(cfut_base_currency,30400004,1,DECODE(cfut_other_currency,30400004,cfut_exchange_rate, Pkgforexprocess.Fncfuturemtmrate (Cfut_Maturity_Date,Cfut_Exchange_Code,Cfut_Base_Currency, Cfut_Other_Currency,Fncasondate()))) Usdequalrate,
      CFUT_SPOT_RATE Spot,
      CFUT_FORWARD_RATE Forward,
      CFUT_BANK_MARGIN Margin,
      DECODE (cfut_Record_Status,10200001,'unconfirmed',10200003,'Confirmed',10200002,'first Confi') RecordStatus,
      pkgReturnCursor.fncGetDescription(CFUT_EXCHANGE_CODE,2)ExchangeTrade,
      pkgReturnCursor.fncGetDescription(CFUT_LOCATION_CODE,2)Loction,
      cfut_user_reference BankRef,
      CFRV_SPOT_RATE CSpotRate,
      CFRV_FORWARD_RATE CForwardRate,
      CFRV_BANK_MARGIN CMarginRate,
      CFRV_CANCEL_AMOUNT CAmount,
      CFUT_PROCESS_COMPLETE ProcessComplete,
      CFUT_USER_ID DEAL_DEALENTEREDBY,
      CFUT_DEALER_REMARK DEALDEALERREMARKS,
      CFUT_BO_REMARK DEALBOREMARKS,
      CFUT_CONFIRM_DATE DEALCONFIRMDATE,
      CFUT_CONFIRM_TIME DEALCONFIRMTIME,
      CFUT_DEALER_NAME DEAL_OURDEALERNAME,
      CFUT_COUNTER_DEALER DEAL_THEIRDEALERNAME,
      CFRV_CONFIRM_DATE CANCELCONFIRMDATE,
      CFRV_CONFIRM_TIME CANCELCONFIRMTIME,
      CFRV_BANK_REFERENCE CancelBankReference,
      CFRV_BO_REMARK CANCELBOREMARKS,
      CFRV_DEALER_NAME CANCELOURDEALERNAME ,
      CFRV_COUNTER_DEALER CANCELTHEIRDEALERNAME,
      CFRV_USER_ID CancelEnteredBy,
      CFRV_DEALER_REMARKS CANCELDEALERREMARKS,
      CFRV_EXECUTE_DATE CASHFLOWDATE
    FROM trtran061
    LEFT OUTER JOIN
      (SELECT Cfrv_Deal_Number,
        Cfrv_Reverse_Lot Cfrv_Reverse_Lot,
        CFRV_EXECUTE_DATE CFRV_EXECUTE_DATE,
        Cfrv_Lot_Price,
        Cfrv_Profit_Loss Cfrv_Profit_Loss,
        CFRV_SPOT_RATE,
        CFRV_FORWARD_RATE,
        CFRV_BANK_MARGIN,
        CFRV_CANCEL_AMOUNT,
        CFRV_CONFIRM_DATE ,
        CFRV_CONFIRM_TIME ,
        CFRV_BANK_REFERENCE ,
        CFRV_BO_REMARK ,
        CFRV_DEALER_NAME ,
        CFRV_COUNTER_DEALER ,
        CFRV_USER_ID ,
        CFRV_DEALER_REMARKS 
      FROM Trtran063
      WHERE Cfrv_Record_Status NOT IN (10200005,10200006)
        --GROUP BY cfrv_deal_number
      )
    ON Cfut_Deal_Number    = Cfrv_Deal_Number
    AND cfrv_execute_date <= fncAsonDate()
    JOIN trmaster001 a
    ON cfut_company_code = a.pick_key_value
    JOIN trmaster001 b
    ON cfut_counter_party = b.pick_key_value
    JOIN trmaster001 c
    ON cfut_base_currency = c.pick_key_value
    JOIN trmaster001 d
    ON cfut_other_currency = d.pick_key_value
    JOIN trmaster001 e
    ON NVL(cfut_backup_deal,12400001) = e.pick_key_value
    WHERE Cfut_Execute_Date          <= Fncasondate()
    AND Cfut_Record_Status NOT       IN (10200005,10200006)
    );