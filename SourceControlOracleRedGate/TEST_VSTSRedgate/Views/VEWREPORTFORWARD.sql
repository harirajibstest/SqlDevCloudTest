CREATE OR REPLACE FORCE VIEW "TEST_VSTSRedgate".vewreportforward (companycode,companyname,dealnumber,dealref,buysellcode,buysell,hedgecode,hedgetrade,bankcode,bankname,dealdate,dealamount,currencycode,othercode,currency,transcode,trans,exrate,maturity,completedate,canceldate,cancelamount,cancelrate,pandlfcy,status,dealtype,userid,initcode,asondate,balancefcy,balanceinr,m2mrate,washrate,mtmpandl,mtmpandlinr,cobrate,usdequalrate,balanceequalusd,spot,"FORWARD",margin,recordstatus,expairyspot,userreference,dealerremarks,cancelspotrate,cancelforwardrate,cancelmarginrate,locationcode,processcomplete,dealconfirmdate,dealconfirmtime,dealboremarks,deal_ourdealername,deal_theirdealername,deal_dealenteredby,edccharges,cancelconfirmtime,cancelconfirmdate,cancelboremarks,canceldealerremarks,cancelourdealername,canceltheirdealername,cancelenteredby,cashflowdate,deal_type,canceltype,reverseserial) AS
SELECT COMPANYCODE,
    COMPANYNAME,
    DEALNUMBER,
    DEALREF,
    BUYSELLCODE,
    BUYSELL,
    HEDGECODE,
    HEDGETRADE,
    BANKCODE,
    BANKNAME,
    DEALDATE,
    DEALAMOUNT,
    CURRENCYCODE,
    OTHERCODE,
    CURRENCY,
    TRANSCODE,
    TRANS,
    EXRATE,
    MATURITY,
    COMPLETEDATE,
    CANCELDATE,
    CANCELAMOUNT,
    CANCELRATE,
    PANDLFCY,
    STATUS,
    DEALTYPE,
    USERID,
    INITCODE,
    ASONDATE,
    BALANCEFCY,
    BALANCEINR,
    M2MRATE,
    WASHRATE,
    case when BUYSELLCODE = 25300001 then
    Pkgforexprocess.fncgetprofitloss( BALANCEFCY,M2MRATE,EXRATE,BUYSELLCODE )
    else Pkgforexprocess.fncgetprofitloss( BALANCEFCY,M2MRATE,EXRATE,BUYSELLCODE ) end AS MTMPANDL,
    case when BUYSELLCODE = 25300001 then
    Pkgforexprocess.fncgetprofitloss(BALANCEFCY,M2MRATE,Exrate,Buysellcode )* Washrate 
    else Pkgforexprocess.fncgetprofitloss(BALANCEFCY,M2MRATE,Exrate,Buysellcode )* Washrate 
    end as Mtmpandlinr,
    0 Cobrate,
    USDEqualRate,
    BALANCEFCY*USDEqualRate BalanceEqualUSD ,
    Spot,
    Forward,
    Margin,
    RecordStatus,
    ExpairySpot,
    UserReference,
    DealerRemarks,
    CancelSpotrate,
    CancelForwardrate,
    CancelMarginrate ,
    LocationCode,
    ProcessComplete,
    DealConfirmDate,
    DealConfirmTime,
    DealBORemarks,
    Deal_OurDealerName,
    Deal_TheirDealerName ,
    Deal_DealEnteredby,
    EDCCharges,
    CancelConfirmTime,
    CancelConfirmDate,
    CancelBoRemarks,
    CancelDealerRemarks,
    CancelOurDealerName,
    CancelTheirDealerName,
    CancelEnteredBy,
    CashFlowDate,Deal_Type,nvl(CancelType,27000001)CancelType,ReverseSerial
  FROM
    (SELECT deal_company_code CompanyCode,
      a.pick_short_description CompanyName,
      deal_deal_number DealNumber,
      deal_dealer_remarks dealref,
      deal_buy_sell BuySellCode,
      DECODE(deal_buy_sell, 25300001,'Buy', 'Sell') BuySell,
      deal_hedge_trade HedgeCode,
      pkgReturnCursor.fncGetDescription(deal_hedge_trade,2) HedgeTrade,
      --        decode(deal_hedge_trade, 26000001, 'Hedge', 'Trade') HedgeTrade,
      deal_counter_party BankCode,
      b.pick_short_description BankName,
      deal_execute_date DealDate,
      deal_base_amount DealAmount,
      deal_base_currency CurrencyCode,
      deal_other_currency OtherCode,
      c.pick_short_description
      || '/'
      || d.pick_short_description Currency,
      deal_backup_deal TransCode,
      e.pick_short_description Trans,
      Deal_Exchange_Rate Exrate,
      Deal_Maturity_Date Maturity,
      Deal_Complete_Date Completedate,
      --  decode(Sign(fncAsonDate() - deal_complete_date), 1, deal_complete_date, NULL) CompleteDate,
      cdel_cancel_date CancelDate,
      cdel_cancel_amount CancelAmount,
      cdel_cancel_rate CancelRate,
      cdel_profit_loss PandLFcy,
      CancelSpotrate,
      CancelForwardrate,
      CancelMarginrate,
      EDCCharges,
      CancelConfirmTime,
      CancelConfirmDate,
      CancelBoRemarks,
      CancelDealerRemarks,
      CancelOurDealerName,
      CancelTheirDealerName,
      CancelEnteredBy,
      CashFlowDate,
      deal_process_complete Status,
      32200001 DealType,
      deal_user_id UserID,
      deal_init_code InitCode,
      DEAL_MATURITY_FROM ExpairySpot,
      DEAL_USER_REFERENCE UserReference,
      DEAL_DEALER_REMARKS DealerRemarks,
      fncAsonDate() AsonDate,
      pkgForexProcess.fncGetOutStanding(deal_deal_number, deal_serial_number, 1, 1, fncAsonDate()) BalanceFcy,
      pkgForexProcess.fncGetOutStanding(deal_deal_number, deal_serial_number, 1, 2, fncAsonDate()) BalanceINR,
      pkgforexprocess.fncgetrate(deal_base_currency, deal_other_currency, fncAsonDate(),deal_buy_sell, pkgforexprocess.fncAllotMonth(DEAL_COUNTER_PARTY, fncAsonDate(), deal_maturity_date),deal_maturity_date) M2MRate,
      DECODE(deal_other_currency, 30400003,1, pkgforexprocess.fncgetrate(deal_other_currency, 30400003,fncAsonDate(), deal_buy_sell,pkgforexprocess.fncAllotMonth (DEAL_COUNTER_PARTY, fncAsonDate(), deal_maturity_date),deal_maturity_date)) WashRate,
      DECODE(deal_base_currency,30400004,1,DECODE(deal_other_currency,30400004,deal_exchange_rate, pkgforexprocess.fncgetrate(deal_base_currency, 30400004, Fncasondate(),Deal_Buy_Sell, Pkgforexprocess.Fncallotmonth(Deal_Counter_Party, Fncasondate(), Deal_Maturity_Date),Deal_Maturity_Date, 1))) Usdequalrate,
      deal_spot_rate Spot,
      deal_forward_rate Forward,
      deal_margin_rate Margin,
      DECODE (Deal_Record_Status,10200001,'unconfirmed',10200003,'Confirmed',10200002,'first Confi') RecordStatus,
      deal_location_code LocationCode,
      DEAL_PROCESS_COMPLETE ProcessComplete,
      DEAL_CONFIRM_DATE DealConfirmDate,
      DEAL_CONFIRM_TIME DealConfirmTime,
      DEAL_BO_REMARK DealBORemarks,
      DEAL_DEALER_NAME Deal_OurDealerName,
      DEAL_COUNTER_DEALER Deal_TheirDealerName ,
      DEAL_USER_ID Deal_DealEnteredby,
      DEAL_DEAL_TYPE Deal_Type,
      CancelType,ReverseSerial
    FROM trtran001
    LEFT OUTER JOIN
      (SELECT cdel_deal_number,
        cdel_cancel_amount cdel_cancel_amount,
        cdel_other_amount cdel_other_amount,
        cdel_cancel_date cdel_cancel_date,
        cdel_cancel_rate,
        trtran006.CDEL_SPOT_RATE CancelSpotrate,
        trtran006.CDEL_forward_RATE CancelForwardrate,
        trtran006.CDEL_margin_RATE CancelMarginrate,
        cdel_profit_loss cdel_profit_loss,
        CDEL_EDC_CHARGE EDCCharges,
        CDEL_CONFIRM_TIME CancelConfirmTime,
        CDEL_CONFIRM_DATE CancelConfirmDate,
        CDEL_BO_REMARK CancelBoRemarks,
        CDEL_DEALER_REMARK CancelDealerRemarks,
        CDEL_DEALER_NAME CancelOurDealerName,
        CDEL_COUNTER_DEALER CancelTheirDealerName,
        CDEL_CASHFLOW_DATE CashFlowDate,
        CDEL_USER_ID CancelEnteredBy,CDEL_CANCEL_TYPE CancelType,
        CDEL_REVERSE_SERIAL ReverseSerial
      FROM trtran006
      WHERE cdel_record_status NOT IN (10200005,10200006)
        --GROUP BY cdel_deal_number
      )
    ON deal_deal_number   = cdel_deal_number
    AND cdel_cancel_date <= fncAsonDate()
    JOIN trmaster001 a
    ON deal_company_code = a.pick_key_value
    JOIN trmaster001 b
    ON deal_counter_party = b.pick_key_value
    JOIN trmaster001 c
    ON deal_base_currency = c.pick_key_value
    JOIN trmaster001 d
    ON deal_other_currency = d.pick_key_value
    JOIN trmaster001 e
    ON NVL(deal_backup_deal,12400001) = e.pick_key_value
    WHERE Deal_Execute_Date          <= Fncasondate()
    AND Deal_Record_Status NOT       IN (10200005,10200006));