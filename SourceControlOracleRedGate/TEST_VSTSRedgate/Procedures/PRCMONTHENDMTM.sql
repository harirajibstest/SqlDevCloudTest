CREATE OR REPLACE PROCEDURE "TEST_VSTSRedgate".prcMonthEndMTM(asonDate  Date,UserID varchar,TrilFinal Varchar,Instrument number)
as
  PRAGMA AUTONOMOUS_TRANSACTION;
  varOperation        GConst.gvarOperation%Type;
  varMessage          GConst.gvarMessage%Type;
  varError            GConst.gvarError%Type;
  numError number;
begin
  --DELETE FROM TRSYSTEM983;
  --DELETE FROM TRSYSTEM959_TRIAL;
  numError :=  fncProductPnlPopulate(ASONDATE,UserID,'Y');
  IF TrilFinal = 'T' THEN
    INSERT INTO TRSYSTEM959_TRIAL
     (MTMF_COMPANY_CODe,MTMF_LOCATION_CODE,MTMF_BUSINESS_UNIT,MTMF_PROFIT_CENTER,MTMF_BUY_SELL,
     MTMF_COUNTER_PARTY,MTMF_DEAL_NUMBER,MTMF_EXECUTE_DATE,MTMF_MATURITY_FROM,MTMF_MATURITY_DATE,
     MTMF_BASE_CURRENCY,MTMF_OTHER_CURRENCY,MTMF_USER_REFERENCE,MTMF_OUTSTANDING_AMOUNT,MTMF_SPOT_RATE,
     MTMF_PREMIUM_RATE,MTMF_BANK_MARGIN,MTMF_FINAL_RATE,MTMF_TRANSACTION_DATE,MTMF_SPOT_MTM,
     MTMF_PREMIUM_MTM,MTMF_FINAL_MTM,MTMF_WASH_RATE,MTMF_INSTUMENT_TYPE,MTMF_RECORD_STATUS,
     MTMF_USER_ID,MTMF_ADD_DATE)
     SELECT companycode,locationcode,deal_type,trader,buysellcode,
     counterparty,dealnumber,executedate,expirydate,maturitydate,
     currencycode,forcurrency,userreference,outstandingamount,spotrate,
     forwardrate,marginrate,exchangerate,asonDate,mtmspot,
     mtmpremium,mtmrate,fncGetRBIRefRate(asonDate,30400004),32400001,10200001,
     UserID, sysdate
     FROM TRSYSTEM983
     WHERE processcomplete = 12400002
    AND recorder         IN(1,2,3)
    AND ason_date         = asonDate;
    UPDATE TRSYSTEM959_TRIAL SET MTMF_PREMIUM_AMORT = ROUND(MTMF_PREMIUM_RATE * (MTMF_TRANSACTION_DATE - MTMF_EXECUTE_DATE + 1)/
                                                (MTMF_MATURITY_DATE - MTMF_EXECUTE_DATE + 1),6)
                                                WHERE MTMF_PREMIUM_RATE != 0 AND (MTMF_MATURITY_DATE - MTMF_EXECUTE_DATE) > 0;
    UPDATE TRSYSTEM959_TRIAL SET MTMF_PREMIUM_AMOUNT = ROUND(MTMF_OUTSTANDING_AMOUNT * MTMF_PREMIUM_AMORT,2)*-1;
    UPDATE TRSYSTEM959_TRIAL SET MTMF_BALANCE_PREMIUM = ((MTMF_PREMIUM_RATE * MTMF_OUTSTANDING_AMOUNT)*-1) - MTMF_PREMIUM_AMOUNT
                                                WHERE MTMF_PREMIUM_RATE != 0 AND (MTMF_MATURITY_DATE - MTMF_EXECUTE_DATE) > 0;
    UPDATE TRSYSTEM959_TRIAL SET MTMF_SPOT_AMOUNT = (MTMF_SPOT_MTM - MTMF_SPOT_RATE) * MTMF_OUTSTANDING_AMOUNT;
    UPDATE TRSYSTEM959_TRIAL SET MTMF_FORWARD_AMOUNT = (MTMF_FINAL_MTM - MTMF_FINAL_RATE) * MTMF_OUTSTANDING_AMOUNT;
    UPDATE TRSYSTEM959_TRIAL SET MTMF_TOTAL_PANDL = MTMF_PREMIUM_AMOUNT + MTMF_SPOT_AMOUNT;
    UPDATE TRSYSTEM959_TRIAL SET MTMF_HEDGE_RESERVE = MTMF_TOTAL_PANDL - MTMF_FORWARD_AMOUNT;
  ELSE
    INSERT INTO TRSYSTEM959
     (MTMF_COMPANY_CODe,MTMF_LOCATION_CODE,MTMF_BUSINESS_UNIT,MTMF_PROFIT_CENTER,MTMF_BUY_SELL,
     MTMF_COUNTER_PARTY,MTMF_DEAL_NUMBER,MTMF_EXECUTE_DATE,MTMF_MATURITY_FROM,MTMF_MATURITY_DATE,
     MTMF_BASE_CURRENCY,MTMF_OTHER_CURRENCY,MTMF_USER_REFERENCE,MTMF_OUTSTANDING_AMOUNT,MTMF_SPOT_RATE,
     MTMF_PREMIUM_RATE,MTMF_BANK_MARGIN,MTMF_FINAL_RATE,MTMF_TRANSACTION_DATE,MTMF_SPOT_MTM,
     MTMF_PREMIUM_MTM,MTMF_FINAL_MTM,MTMF_WASH_RATE,MTMF_INSTUMENT_TYPE,MTMF_RECORD_STATUS,
     MTMF_USER_ID,MTMF_ADD_DATE)
     SELECT companycode,locationcode,deal_type,trader,buysellcode,
     counterparty,dealnumber,executedate,expirydate,maturitydate,
     currencycode,forcurrency,userreference,outstandingamount,spotrate,
     forwardrate,marginrate,exchangerate,asonDate,mtmspot,
     mtmpremium,mtmrate,fncGetRBIRefRate(asonDate,30400004),32400001,10200001,
     UserID, sysdate
     FROM TRSYSTEM983
     WHERE processcomplete = 12400002
    AND recorder         IN(1,2,3)
    AND ason_date         = asonDate;
    UPDATE TRSYSTEM959 SET MTMF_PREMIUM_AMORT = ROUND(MTMF_PREMIUM_RATE * (MTMF_TRANSACTION_DATE - MTMF_EXECUTE_DATE + 1)/
                                                (MTMF_MATURITY_DATE - MTMF_EXECUTE_DATE + 1),6)
                                                WHERE MTMF_PREMIUM_RATE != 0 AND (MTMF_MATURITY_DATE - MTMF_EXECUTE_DATE) > 0;
    UPDATE TRSYSTEM959 SET MTMF_PREMIUM_AMOUNT = ROUND(MTMF_OUTSTANDING_AMOUNT * NVL(MTMF_PREMIUM_AMORT,0),2)*-1;
    UPDATE TRSYSTEM959 SET MTMF_BALANCE_PREMIUM = ((MTMF_PREMIUM_RATE * MTMF_OUTSTANDING_AMOUNT)*-1) - MTMF_PREMIUM_AMOUNT
                                                WHERE MTMF_PREMIUM_RATE != 0 AND (MTMF_MATURITY_DATE - MTMF_EXECUTE_DATE) > 0;
    UPDATE TRSYSTEM959 SET MTMF_SPOT_AMOUNT = (MTMF_SPOT_MTM - MTMF_SPOT_RATE) * MTMF_OUTSTANDING_AMOUNT;
    UPDATE TRSYSTEM959 SET MTMF_FORWARD_AMOUNT = (MTMF_FINAL_MTM - MTMF_FINAL_RATE) * MTMF_OUTSTANDING_AMOUNT;
    UPDATE TRSYSTEM959 SET MTMF_TOTAL_PANDL = MTMF_PREMIUM_AMOUNT + MTMF_SPOT_AMOUNT;
    UPDATE TRSYSTEM959 SET MTMF_HEDGE_RESERVE = MTMF_TOTAL_PANDL - MTMF_FORWARD_AMOUNT;
  END IF;
  commit;
  Exception
    When others then
      numError := SQLCODE;
      varError := SQLERRM;
      varError := GConst.fncReturnError('prcMonthEndMTM', numError, varMessage,varOperation, varError);
      Raise_Application_Error(-20101, Varerror);    
end prcMonthEndMTM;
/